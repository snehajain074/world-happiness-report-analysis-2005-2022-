import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import plotly.express as px
import plotly.offline as py
from PIL import Image
from io import BytesIO
py.init_notebook_mode(connected=True)
%matplotlib inline

sns.set_style('darkgrid')
plt.rcParams['font.size'] = 15
plt.rcParams['figure.figsize'] = (10, 7)
plt.rcParams['figure.facecolor'] = '#FFE5B4'

df = pd.read_csv('C:\MLH\World Happiness Report.csv')

df.head()

df.dtypes

data_columns = ['country','region','life_ladder','year','GDP_per_capita','social_support','life_expectancy','freedom_of_LifeChoices','generosity','corruption_index','confidence_in_govt']

df = df[data_columns].copy()

df.head()
df.shape

df.isna().sum()

df.duplicated().value_counts()

df.describe()

top_happy = df[(df['year'] == 2021)]
data = top_happy.groupby('country')['life_ladder'].mean().round(2).nlargest(10).reset_index()

fig, ax = plt.subplots(figsize=(10, 5))
sns.set(style = 'whitegrid')  
palette = sns.color_palette("Blues",n_colors=10)
palette.reverse()
sns.barplot(ax =ax,data = data , x = data['life_ladder'], y = data['country'],palette = palette)
ax.set_title(' Top 10 Happiest Countries of 2022')
ax.bar_label(ax.containers[0])

fig = px.choropleth(df.sort_values("year"), 
                    locations = "country", 
                    color = "life_ladder",
                    locationmode = "country names",
                    template = "plotly_dark",
                     color_continuous_scale= 'YlOrBr',
                    animation_frame = "year")
fig.update_layout(title = "Life Ladder Comparison by Countries")
fig.show()

features1=list(['life_ladder','GDP_per_capita','social_support','life_expectancy','freedom_of_LifeChoices','generosity'])
corr = df[features1].corr()

axes = corr.iloc[1:, 0].plot(kind = 'bar')
axes.set_title("Correlation With Happines")


# Plot b/w GDP and life expectancy at birth
plt.rcParams['figure.figsize'] = (15, 7)
plt.title('Plot between GDP and life expectancy at birth')
sns.scatterplot (x = df.GDP_per_capita, y = df.freedom_of_LifeChoices, hue = df.region, s = 200);
plt.legend(loc = 'upper left', fontsize = '10')
plt.xlabel('GDP')
plt.ylabel('freedom to make life choices')

df['corruption_index'].dropna(inplace = True)

top_corrupt = df[(df['year'] == 2022)]
data = top_corrupt.groupby('country')['corruption_index'].mean().nlargest(10).reset_index()

fig, ax = plt.subplots(figsize=(10, 5))
sns.set(style = 'whitegrid')  
palette = sns.color_palette("YlOrBr",n_colors=10)
palette.reverse()
sns.barplot(ax =ax,data = data , x = data['corruption_index'].round(2)*100, y = data['country'],palette = palette)
ax.set_title(' Top 10 Corrupted Countries of 2022')
ax.bar_label(ax.containers[0])
data = top_corrupt.groupby('country')['corruption_index'].mean().nsmallest(10).reset_index()

fig, ax = plt.subplots(figsize=(10, 5))
sns.set(style = 'whitegrid')  
sns.barplot(ax =ax,data = data , x = data['corruption_index'].round(2)*100, y = data['country'],palette = "YlOrBr")
ax.set_title(' 10 Lowest Corrupted Countries of 2022')
ax.bar_label(ax.containers[0])

gdp_region = df.groupby('region')['GDP_per_capita'].sum() 
gdp_region

gdp_region.plot.pie(autopct = '%1.1f%%')
plt.title('GDP by Region')
plt.ylabel('')

# Total countries
total_country = df.groupby('region')[['country']].count()
print(total_country)

#Correlation Map
cor = df.corr(method = "pearson")
f, ax = plt.subplots(figsize = (10, 5))
sns.heatmap(cor, mask = np.zeros_like(cor, dtype=bool),
        cmap="Blues", square=True, ax=ax)

# corruption in regions
corruption = df.groupby('region')[['corruption_index']].mean()
corruption

plt.rcParams['figure.figsize'] = (12, 6)
plt.title('Perception of Corruption in various Regions')
plt.xlabel('Regions', fontsize = 15)
plt.ylabel( 'Corruption Index', fontsize = 15)
plt.xticks(rotation = 30, ha = 'right')
plt.bar(corruption.index, corruption.corruption_index)
